
        document.addEventListener('DOMContentLoaded', function() {
            const sourceLang = document.getElementById('source-lang');
            const targetLang = document.getElementById('target-lang');
            const inputText = document.getElementById('input-text');
            const outputText = document.getElementById('output-text');
            const swapBtn = document.getElementById('swap-btn');
            const translateBtn = document.getElementById('translate-btn');
            const charCount = document.getElementById('char-count');
            const sourceFlag = document.getElementById('source-flag');
            const targetFlag = document.getElementById('target-flag');
            
            // Initialize with a translation
            simulateTranslation();
            
            // Character count update
            inputText.addEventListener('input', function() {
                charCount.textContent = inputText.value.length;
            });
            
            // Update flags when languages change
            sourceLang.addEventListener('change', updateFlags);
            targetLang.addEventListener('change', updateFlags);
            
            function updateFlags() {
                const flags = {
                    'auto': 'üåê', 'en': 'üá∫üá∏', 'hi': 'üáÆüá≥', 'es': 'üá™üá∏', 
                    'fr': 'üá´üá∑', 'de': 'üá©üá™', 'it': 'üáÆüáπ', 'ja': 'üáØüáµ',
                    'ko': 'üá∞üá∑', 'zh': 'üá®üá≥', 'ar': 'üá∏üá¶', 'ru': 'üá∑üá∫'
                };
                
                sourceFlag.textContent = flags[sourceLang.value];
                targetFlag.textContent = flags[targetLang.value];
            }
            
            // Swap languages
            swapBtn.addEventListener('click', function() {
                const temp = sourceLang.value;
                sourceLang.value = targetLang.value;
                targetLang.value = temp;
                
                // Also swap text content
                const tempText = inputText.value;
                inputText.value = outputText.value;
                outputText.value = tempText;
                
                // Update character count
                charCount.textContent = inputText.value.length;
                
                // Update flags
                updateFlags();
            });
            
            // Translation function
            translateBtn.addEventListener('click', simulateTranslation);
            
            // Simulated translation function
            function simulateTranslation() {
                const text = inputText.value.trim();
                const from = sourceLang.value;
                const to = targetLang.value;
                
                if (!text) {
                    outputText.value = "Please enter some text to translate.";
                    return;
                }
                
                // Show loading state
                outputText.value = "Translating...";
                
                // Simulate API call with timeout
                setTimeout(() => {
                    // In a real application, this would be an API call to a translation service
                    const translatedText = mockTranslation(text, from, to);
                    outputText.value = translatedText;
                }, 800);
            }
            
            // Mock translation function with more examples
            function mockTranslation(text, from, to) {
                // Convert to lowercase for case-insensitive matching
                const lowerText = text.toLowerCase();
                
                // English to Hindi translations
                if ((from === 'en' || from === 'auto') && to === 'hi') {
                    const translations = {
                        'hello': '‡§®‡§Æ‡§∏‡•ç‡§§‡•á',
                        'how are you': '‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§π‡•à‡§Ç',
                        'welcome': '‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•á',
                        'thank you': '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶',
                        'good morning': '‡§∂‡•Å‡§≠ ‡§™‡•ç‡§∞‡§≠‡§æ‡§§',
                        'good night': '‡§∂‡•Å‡§≠ ‡§∞‡§æ‡§§‡•ç‡§∞‡§ø',
                        'what is your name': '‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à',
                        'my name is': '‡§Æ‡•á‡§∞‡§æ ‡§®‡§æ‡§Æ ‡§π‡•à',
                        'i love programming': '‡§Æ‡•Å‡§ù‡•á ‡§™‡•ç‡§∞‡•ã‡§ó‡•ç‡§∞‡§æ‡§Æ‡§ø‡§Ç‡§ó ‡§∏‡•á ‡§™‡•ç‡§Ø‡§æ‡§∞ ‡§π‡•à',
                        'language': '‡§≠‡§æ‡§∑‡§æ',
                        'translate': '‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶',
                        'multilingual translator': '‡§¨‡§π‡•Å‡§≠‡§æ‡§∑‡•Ä ‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶‡§ï',
                        'hello, how are you? welcome to the multilingual translator.': 
                            '‡§®‡§Æ‡§∏‡•ç‡§§‡•á, ‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§π‡•à‡§Ç? ‡§¨‡§π‡•Å‡§≠‡§æ‡§∑‡•Ä ‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶‡§ï ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à‡•§'
                    };
                    
                    // Check for exact match first
                    if (translations[lowerText]) {
                        return translations[lowerText];
                    }
                    
                    // Check for partial matches and translate word by word
                    const words = text.split(' ');
                    const translatedWords = words.map(word => {
                        const cleanWord = word.replace(/[.,?!]/g, '');
                        return translations[cleanWord.toLowerCase()] || word;
                    });
                    
                    return translatedWords.join(' ');
                }
                
                // Hindi to English translations
                if (from === 'hi' && to === 'en') {
                    const translations = {
                        '‡§®‡§Æ‡§∏‡•ç‡§§‡•á': 'Hello',
                        '‡§Ü‡§™ ‡§ï‡•à‡§∏‡•á ‡§π‡•à‡§Ç': 'How are you',
                        '‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•á': 'Welcome',
                        '‡§ß‡§®‡•ç‡§Ø‡§µ‡§æ‡§¶': 'Thank you',
                        '‡§∂‡•Å‡§≠ ‡§™‡•ç‡§∞‡§≠‡§æ‡§§': 'Good morning',
                        '‡§∂‡•Å‡§≠ ‡§∞‡§æ‡§§‡•ç‡§∞‡§ø': 'Good night',
                        '‡§Ü‡§™‡§ï‡§æ ‡§®‡§æ‡§Æ ‡§ï‡•ç‡§Ø‡§æ ‡§π‡•à': 'What is your name',
                        '‡§Æ‡•á‡§∞‡§æ ‡§®‡§æ‡§Æ ‡§π‡•à': 'My name is',
                        '‡§≠‡§æ‡§∑‡§æ': 'Language',
                        '‡§Ö‡§®‡•Å‡§µ‡§æ‡§¶': 'Translation'
                    };
                    
                    if (translations[text]) {
                        return translations[text];
                    }
                    
                    return `[English translation of: ${text}]`;
                }
                
                // For other language combinations
                return `[Translated from ${getLanguageName(from)} to ${getLanguageName(to)}] ${text}`;
            }
            
            function getLanguageName(code) {
                const languages = {
                    'auto': 'Detected Language',
                    'en': 'English',
                    'hi': 'Hindi',
                    'es': 'Spanish',
                    'fr': 'French',
                    'de': 'German',
                    'it': 'Italian',
                    'ja': 'Japanese',
                    'ko': 'Korean',
                    'zh': 'Chinese',
                    'ar': 'Arabic',
                    'ru': 'Russian'
                };
                
                return languages[code] || code;
            }
            
            // Initialize flags
            updateFlags();
        });